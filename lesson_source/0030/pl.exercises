
5:
    title: 5a. Wczytywacz heheszek
    task: |
        Napisz aplikację, która w zależności od argumentu "file" (GET) odczyta plik "hehe.txt",
        "heheszki.json" lub "beczka_smiechu.txt" (zawartość dowolna, powinny znajdować się w katalogu z aplikacją).
        Obsłuż sytuację, w której plik nie będzie istniał.
    possible_answer: yey
6:
    title: 5b. Heheszki poza kontrolo
    task: |
        W aplikacji 5a. jeśli użytkownik odpowiednio zmodyfikuje argument "file"
        (zamiast "hehe.txt" poda np. "../../../../hehe.txt" [Linux] lub "..\..\..\..\hehe.txt" [Windows]) a argument file nie zostanie odpowiednio zweryfikowany (nie sprawdzimy, czy jego wartość jest dopuszczalna),
        możliwe jest załadowanie dowolnego pliku (każde ../ lub ..\ powoduje wejście do katalogu/folderu nadrzędnego).
        Napraw aplikację tak, aby pod uwagę brana była tylko nazwa pliku.
        Przydatny moduł: os.path
        (ciekawostka: jest to błąd "z życia wzięty" z pewnego większego projektu)
        Więcej informacji o podatności aplikacji z 5a:
        https://sekurak.pl/czym-jest-podatnosc-path-traversal/
        https://www.owasp.org/index.php/Path_Traversal
    possible_answer: yey
7:
    title: 7. Google.me
    task: |
        Napisz aplikacje we flasku, która wygląda jak główna strona google... po kliknięciu szukaj przekierowuje na:
        "http://thecatapi.com/api/images/get?format=src&type=gif"
        lub na:
        "http://thecatapi.com/api/images/get"
    possible_answer: yey
8:
    title: 8. Kalkulator objętości
    task: |
        Stwórz - z wykorzystaniem klas i dziedziczenia - kalkulator objętości brył:
        sześcianu, prostopadłościanu, stożka i walca.
        Na wszelki wypadek wzory na objętość zostały podane poniżej.
        Sześcian: V = a^3
        Prostopadłościan: V = a*b*c
        Walec: V = pi * r**2 * h
        Stożek: V = 1/3 * pi * r**2 * h
    possible_answer: yey
9:
    title: 9. UwIeRzYtElNiAnIe
    task: |
        Napisz aplikację, która będzie pozwalała założyć w niej konto posiadające login i hasło.
        Dane użytkowników trzymaj w słowniku. Pamiętaj żeby sprawdzić czy użytkownik o danym loginie już nie istnieje.
        Aplikacja też powinna pozwolić zalogować się wykorzystując login i hasło.
    possible_answer: yey
